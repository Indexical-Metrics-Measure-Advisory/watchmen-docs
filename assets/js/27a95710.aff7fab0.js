"use strict";(self.webpackChunkwatchmen_docs=self.webpackChunkwatchmen_docs||[]).push([[4006],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>s});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),p=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=p(t.components);return n.createElement(d.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),k=p(a),s=r,c=k["".concat(d,".").concat(s)]||k[s]||u[s]||l;return a?n.createElement(c,i(i({ref:e},m),{},{components:a})):n.createElement(c,i({ref:e},m))}));function s(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},28175:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(83117),r=(a(67294),a(3905));const l={id:"topic",title:"Topic",sidebar_position:80},i="Topic",o={unversionedId:"web-client/admin/topic",id:"version-16.1/web-client/admin/topic",title:"Topic",description:"Topic is the core concept of _Watchmen_,",source:"@site/versioned_docs/version-16.1/020-web-client/010-admin/080-topic.md",sourceDirName:"020-web-client/010-admin",slug:"/web-client/admin/topic",permalink:"/docs/16.1/web-client/admin/topic",draft:!1,editUrl:"https://github.com/Indexical-Metrics-Measure-Advisory/watchmen-docs/tree/main/versioned_docs/version-16.1/020-web-client/010-admin/080-topic.md",tags:[],version:"16.1",lastUpdatedBy:"botlikes",lastUpdatedAt:1680853926,formattedLastUpdatedAt:"Apr 7, 2023",sidebarPosition:80,frontMatter:{id:"topic",title:"Topic",sidebar_position:80},sidebar:"sidebar",previous:{title:"Enumeration",permalink:"/docs/16.1/web-client/admin/enumeration"},next:{title:"Pipeline",permalink:"/docs/16.1/web-client/admin/pipeline"}},d={},p=[{value:"Standard Tuple Page",id:"standard-tuple-page",level:2},{value:"Kind",id:"kind",level:2},{value:"Type",id:"type",level:2},{value:"Raw",id:"raw",level:3},{value:"Meta",id:"meta",level:3},{value:"Distinct",id:"distinct",level:3},{value:"Aggregation",id:"aggregation",level:3},{value:"Factor",id:"factor",level:2},{value:"Factor Types",id:"factor-types",level:3},{value:"Special Types for Raw Topic",id:"special-types-for-raw-topic",level:3},{value:"Encryption",id:"encryption",level:3},{value:"Default Value",id:"default-value",level:3},{value:"Index &amp; Unique Index",id:"index--unique-index",level:3},{value:"Enumeration",id:"enumeration",level:3},{value:"Label &amp; Description",id:"label--description",level:3},{value:"Factor Operations",id:"factor-operations",level:3},{value:"Search",id:"search",level:4},{value:"Pagination",id:"pagination",level:4},{value:"Add &amp; Delete",id:"add--delete",level:4},{value:"Import",id:"import",level:4},{value:"Structure",id:"structure",level:5},{value:"Instance Data",id:"instance-data",level:5},{value:"Scripts",id:"scripts",level:2},{value:"How to Export Scripts",id:"how-to-export-scripts",level:3},{value:"How Script Works",id:"how-script-works",level:3},{value:"For Creation",id:"for-creation",level:4},{value:"For Alteration",id:"for-alteration",level:4},{value:"Form Validation",id:"form-validation",level:2},{value:"Topic Layers",id:"topic-layers",level:2}],m={toc:p};function u(t){let{components:e,...l}=t;return(0,r.kt)("wrapper",(0,n.Z)({},m,l,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"topic"},"Topic"),(0,r.kt)("p",null,"Topic is the core concept of ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Watchmen")),","),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Is categorized by kind and type,"),(0,r.kt)("li",{parentName:"ul"},"Has a set of factors,"),(0,r.kt)("li",{parentName:"ul"},"Attached into a data source",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"In RDS, topic equates table,"),(0,r.kt)("li",{parentName:"ul"},"In NoSQL, topic equates document.")))),(0,r.kt)("p",null,"And"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"All data are stored in topics,"),(0,r.kt)("li",{parentName:"ul"},"Pipelines are run on topics,"),(0,r.kt)("li",{parentName:"ul"},"Subjects, datasets, reports are built based on topics.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Topic is available for ",(0,r.kt)("inlineCode",{parentName:"p"},"Admin")," only.")),(0,r.kt)("h2",{id:"standard-tuple-page"},"Standard Tuple Page"),(0,r.kt)("p",null,"Topic use ",(0,r.kt)("a",{parentName:"p",href:"../standard-tuple-page"},"standard tuple page"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Edit Topic",src:a(37703).Z,width:"3554",height:"4242"})),(0,r.kt)("h2",{id:"kind"},"Kind"),(0,r.kt)("p",null,"There are 2 kinds of topic,"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"System"),(0,r.kt)("li",{parentName:"ul"},"Business")),(0,r.kt)("p",null,"For example, topics for business data are ",(0,r.kt)("inlineCode",{parentName:"p"},"Business"),", topics for log data are ",(0,r.kt)("inlineCode",{parentName:"p"},"System"),"."),(0,r.kt)("h2",{id:"type"},"Type"),(0,r.kt)("p",null,"There are several types of topic."),(0,r.kt)("h3",{id:"raw"},"Raw"),(0,r.kt)("p",null,"Raw topic is for receiving data from other systems, we use JSON format to store raw data which received via RESTful API. Raw data is\nimmutable, which means each request will create a new raw data record.",(0,r.kt)("br",{parentName:"p"}),"\n","In some cases, raw data needs to be searched, but as a fairly well known fact, data stored as JSON is not that easy for searching,\nespecially in RDS, such as Oracle and MySQL. In the latest version of Oracle and MySQL, they both provide the functions to operate JSON\nobjects, but we offer an easy way, which is factor in hierarchical structure of JSON object can be flattened as a single column."),(0,r.kt)("p",null,"For example, here is an order JSON,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "orderId": 10000,\n    "orderNo": "N10000",\n    "amount": 10000,\n    "customer": {\n        "name": "John Doe",\n        "gender": "M"\n    }\n}\n')),(0,r.kt)("p",null,"Simply tick the ",(0,r.kt)("inlineCode",{parentName:"p"},"Flatten Column")," checkbox, a single table column is created for ",(0,r.kt)("inlineCode",{parentName:"p"},"customer.name"),","),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Flatten Factor",src:a(45163).Z,width:"2252",height:"400"})),(0,r.kt)("p",null,"Now, the raw topic can be searched by simple SQL,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'// assume topic name is "customer", then table name will be "TOPIC_CUSTOMER"\nSELECT * FROM TOPIC_CUSTOMER WHERE CUSTOMER_NAME = \'John Doe\';\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Index doesn't be applied in above sample. In real world, for search performance, it should be declared,"),(0,r.kt)("li",{parentName:"ul"},"Dots(",(0,r.kt)("inlineCode",{parentName:"li"},"."),") in factor name are replaced by underscore."))),(0,r.kt)("h3",{id:"meta"},"Meta"),(0,r.kt)("p",null,"Meta topic is for those data is definition, meta, not for instance data. There are several characteristic features of metadata,"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Includes more factors instead of code-label pair in enumeration,"),(0,r.kt)("li",{parentName:"ul"},"Immutable or at least slowly changing,"),(0,r.kt)("li",{parentName:"ul"},"No writing from other topics,"),(0,r.kt)("li",{parentName:"ul"},"Reading by pipelines only.")),(0,r.kt)("p",null,"Subject/dataset will be more descriptive base on a set of well-designed meta topics."),(0,r.kt)("h3",{id:"distinct"},"Distinct"),(0,r.kt)("p",null,"Distinct topic is for instance data, such as order, customer, etc. In transaction system, instance data is changed time by time, every\nsnapshot should be extracted and send to ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Watchmen")),", store in distinct topic. On the other hand, we also know change logs are very\nimportant part in IT system, for some reason, typically for audit, changes are logged and persisted. From perspective of changes on\ntimeline, they are also can be treated as distinct data. Let's play that out with an example to make it more apparent."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Firstly, a raw topic ",(0,r.kt)("inlineCode",{parentName:"li"},"RAW_ORDER"),",")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "orderId": 10000,\n    "orderNo": "N10000",\n    "amount": 10000,\n    "customer": {\n        "name": "John Doe",\n        "gender": "M"\n    }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a distinct topic ",(0,r.kt)("inlineCode",{parentName:"li"},"ORDER")," for instance data, a distinct row will be created when raw data received,")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"OrderID"),(0,r.kt)("th",{parentName:"tr",align:null},"OrderNO"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"10000"),(0,r.kt)("td",{parentName:"tr",align:null},"N10000"),(0,r.kt)("td",{parentName:"tr",align:null},"10000")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create another distinct topic ",(0,r.kt)("inlineCode",{parentName:"li"},"ORDER_AMOUNT_CHANGES")," for change logs of order amount, a change row will be created,")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ChangeID"),(0,r.kt)("th",{parentName:"tr",align:null},"OrderID"),(0,r.kt)("th",{parentName:"tr",align:null},"OrderNO"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9000000000000000000"),(0,r.kt)("td",{parentName:"tr",align:null},"10000"),(0,r.kt)("td",{parentName:"tr",align:null},"N10000"),(0,r.kt)("td",{parentName:"tr",align:null},"10000")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Change occurred on order ",(0,r.kt)("inlineCode",{parentName:"li"},"N10000"),", amount is changed from ",(0,r.kt)("inlineCode",{parentName:"li"},"10000")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"20000"),",")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{4}","{4}":!0},'{\n    "orderId": 10000,\n    "orderNo": "N10000",\n    "amount": 20000,\n    "customer": {\n        "name": "John Doe",\n        "gender": "M"\n    }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For topic ",(0,r.kt)("inlineCode",{parentName:"li"},"ORDER"),", change should be merged into order record,")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"OrderID"),(0,r.kt)("th",{parentName:"tr",align:null},"OrderNO"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"10000"),(0,r.kt)("td",{parentName:"tr",align:null},"N10000"),(0,r.kt)("td",{parentName:"tr",align:null},"20000")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For topic ",(0,r.kt)("inlineCode",{parentName:"li"},"ORDER_AMOUNT_CHANGES"),", a new record is created for change,")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ChangeID"),(0,r.kt)("th",{parentName:"tr",align:null},"OrderID"),(0,r.kt)("th",{parentName:"tr",align:null},"OrderNO"),(0,r.kt)("th",{parentName:"tr",align:null},"Amount"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9000000000000000000"),(0,r.kt)("td",{parentName:"tr",align:null},"10000"),(0,r.kt)("td",{parentName:"tr",align:null},"N10000"),(0,r.kt)("td",{parentName:"tr",align:null},"10000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9000000000000000001"),(0,r.kt)("td",{parentName:"tr",align:null},"10000"),(0,r.kt)("td",{parentName:"tr",align:null},"N10000"),(0,r.kt)("td",{parentName:"tr",align:null},"20000")))),(0,r.kt)("p",null,"Now we see the difference between topics ",(0,r.kt)("inlineCode",{parentName:"p"},"ORDER")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ORDER_AMOUNT_CHANGES"),", they describe one order from different perspectives. From\nstatistical experience, different perspectives will lead the different conclusions. In this case, we can analyze the consumer behavior of\nhow much from ",(0,r.kt)("inlineCode",{parentName:"p"},"ORDER"),", and how often changes from ",(0,r.kt)("inlineCode",{parentName:"p"},"ORDER_AMOUNT_CHANGES"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Values of ",(0,r.kt)("inlineCode",{parentName:"p"},"ChangeID")," are generated by built-in sequence generating function, find it on ",(0,r.kt)("a",{parentName:"p",href:"pipeline"},"pipeline"),".")),(0,r.kt)("h3",{id:"aggregation"},"Aggregation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Watchmen"))," offers 3 types of topics to store aggregation data."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Aggregate"),(0,r.kt)("li",{parentName:"ul"},"Time"),(0,r.kt)("li",{parentName:"ul"},"Ratio")),(0,r.kt)("p",null,"Types of aggregation topics are designed from the point of view of management. It is suggested to classify aggregation topics to,"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ratio: has one computed ratio factor at least, for aggregated to a ratio, like increment, decrement, etc.,"),(0,r.kt)("li",{parentName:"ul"},"Time: has one time-dimension factor at least, for aggregation on time period, like annually, quarterly, monthly, etc.,"),(0,r.kt)("li",{parentName:"ul"},"Aggregate: except ratio and time aggregation, for aggregation on enumeration, meta, etc.")),(0,r.kt)("h2",{id:"factor"},"Factor"),(0,r.kt)("p",null,"Factors are the basic elements of a topic. According to topic stored, factor equates"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A table column when topic is a table in RDS,"),(0,r.kt)("li",{parentName:"ul"},"A field when topic is a document in NoSQL.")),(0,r.kt)("h3",{id:"factor-types"},"Factor Types"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Watchmen"))," offers 50+ types for factor,"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Factor Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"),(0,r.kt)("th",{parentName:"tr",align:null},"Purpose"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sequence"),(0,r.kt)("td",{parentName:"tr",align:null},"Sequence, auto-increment"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},"Numeric value"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Unsigned"),(0,r.kt)("td",{parentName:"tr",align:null},"0 & Positive numeric value"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:null},"String value"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean value"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Address"),(0,r.kt)("td",{parentName:"tr",align:null},"String value for address"),(0,r.kt)("td",{parentName:"tr",align:null},"Geo related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Continent"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration, for address"),(0,r.kt)("td",{parentName:"tr",align:null},"Geo related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Region"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration, for address"),(0,r.kt)("td",{parentName:"tr",align:null},"Geo related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Country"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration, for address"),(0,r.kt)("td",{parentName:"tr",align:null},"Geo related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Province"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration, for address"),(0,r.kt)("td",{parentName:"tr",align:null},"Geo related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"City"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration, for address"),(0,r.kt)("td",{parentName:"tr",align:null},"Geo related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"District"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration, for address"),(0,r.kt)("td",{parentName:"tr",align:null},"Geo related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Road"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration, for address"),(0,r.kt)("td",{parentName:"tr",align:null},"Geo related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Community"),(0,r.kt)("td",{parentName:"tr",align:null},"String value"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Floor"),(0,r.kt)("td",{parentName:"tr",align:null},"Numeric value for address"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Residence type"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Residential area"),(0,r.kt)("td",{parentName:"tr",align:null},"Numeric value for house property"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Email"),(0,r.kt)("td",{parentName:"tr",align:null},"String value for contact"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Phone"),(0,r.kt)("td",{parentName:"tr",align:null},"String value for contact"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Mobile"),(0,r.kt)("td",{parentName:"tr",align:null},"String value for contact"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Fax"),(0,r.kt)("td",{parentName:"tr",align:null},"String value for contact"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Datetime"),(0,r.kt)("td",{parentName:"tr",align:null},"YYYY-MM-DD HH:mm:ss"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Full datetime"),(0,r.kt)("td",{parentName:"tr",align:null},"YYYY-MM-DD HH:mm:ss.SSS"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Date"),(0,r.kt)("td",{parentName:"tr",align:null},"YYYY-MM-DD"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Time"),(0,r.kt)("td",{parentName:"tr",align:null},"HH:mm:ss"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Year"),(0,r.kt)("td",{parentName:"tr",align:null},"4 digits"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Half year"),(0,r.kt)("td",{parentName:"tr",align:null},"1: first half, 2: second half"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Quarter"),(0,r.kt)("td",{parentName:"tr",align:null},"1 - 4"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Month"),(0,r.kt)("td",{parentName:"tr",align:null},"1 - 12"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Half month"),(0,r.kt)("td",{parentName:"tr",align:null},"1: first half, 2: second half"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Ten days"),(0,r.kt)("td",{parentName:"tr",align:null},"1, 2, 3"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Week of year"),(0,r.kt)("td",{parentName:"tr",align:null},"0 (the partial week that precedes the first Sunday of the year) - 53 (leap year)"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Week of month"),(0,r.kt)("td",{parentName:"tr",align:null},"0 (the partial week that precedes the first Sunday of the year) - 5"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Half week"),(0,r.kt)("td",{parentName:"tr",align:null},"1: first half, 2: second half"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Day of month"),(0,r.kt)("td",{parentName:"tr",align:null},"1 - 31, according to month/year"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Day of week"),(0,r.kt)("td",{parentName:"tr",align:null},"1 (Sunday) - 7 (Saturday)"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Day kind"),(0,r.kt)("td",{parentName:"tr",align:null},"1: workday, 2: weekend, 3: holiday"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Hour"),(0,r.kt)("td",{parentName:"tr",align:null},"0 - 23"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Hour kind"),(0,r.kt)("td",{parentName:"tr",align:null},"1: work time, 2: off hours, 3: sleeping time"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Minute"),(0,r.kt)("td",{parentName:"tr",align:null},"0 - 59"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Second"),(0,r.kt)("td",{parentName:"tr",align:null},"0 - 59"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Millisecond"),(0,r.kt)("td",{parentName:"tr",align:null},"0 - 999"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Am pm"),(0,r.kt)("td",{parentName:"tr",align:null},"1, 2"),(0,r.kt)("td",{parentName:"tr",align:null},"Time related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Gender"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration"),(0,r.kt)("td",{parentName:"tr",align:null},"Individual related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Occupation"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration"),(0,r.kt)("td",{parentName:"tr",align:null},"Individual related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Date of birth"),(0,r.kt)("td",{parentName:"tr",align:null},"YYYY-MM-DD"),(0,r.kt)("td",{parentName:"tr",align:null},"Individual related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Age"),(0,r.kt)("td",{parentName:"tr",align:null},"Positive numeric value"),(0,r.kt)("td",{parentName:"tr",align:null},"Individual related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ID No."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Individual related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Religion"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration"),(0,r.kt)("td",{parentName:"tr",align:null},"Individual related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Nationality"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration"),(0,r.kt)("td",{parentName:"tr",align:null},"Individual related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Biz trade"),(0,r.kt)("td",{parentName:"tr",align:null},"Predefined enumeration"),(0,r.kt)("td",{parentName:"tr",align:null},"Organization related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Biz scale"),(0,r.kt)("td",{parentName:"tr",align:null},"Positive numeric value"),(0,r.kt)("td",{parentName:"tr",align:null},"Organization related")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Enum"),(0,r.kt)("td",{parentName:"tr",align:null},"Enumerated values, should be defined with ",(0,r.kt)("inlineCode",{parentName:"td"},"Enumeration")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"We highly recommend defining proper type for factor. Type is more readable than name, it can be used to do something in further analysis.")),(0,r.kt)("h3",{id:"special-types-for-raw-topic"},"Special Types for Raw Topic"),(0,r.kt)("p",null,"There are 2 types for raw topic only,"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Factor Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"),(0,r.kt)("th",{parentName:"tr",align:null},"Purpose"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Raw topic only")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Raw topic only")))),(0,r.kt)("p",null,"Because of raw topic store data exactly same as what RESTful received, which is on JSON format, therefore hierarchical structure is\nnecessary. These 2 types are designed to describe the object and array element. Factors in object or array element need to be declared\nexplicitly, use dots(",(0,r.kt)("inlineCode",{parentName:"p"},"."),") to define the hierarchy."),(0,r.kt)("p",null,"For example, a raw topic instance data as below,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "orderId": 10000,\n    "orderNo": "N10000",\n    "amount": 20000,\n    "customer": {\n        "name": "John Doe",\n        "gender": "M",\n        "contact": {\n            "mobile": "87654321",\n            "fax": "12345678"\n        },\n        "addresses": [\n            {\n                "city": "New York",\n                "district": "Brooklyn",\n                "line1": "26 W. Talbot Avenue",\n                "line2": ""\n            },\n            {\n                "city": "New York",\n                "district": "South Richmond Hill",\n                "line1": "7727 Stonybrook St."\n            }\n        ]\n    }\n}\n')),(0,r.kt)("p",null,"Factors should be defined as below,"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Flatten"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Index"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"orderId"),(0,r.kt)("td",{parentName:"tr",align:null},"Sequence"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"orderNo"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},"Unsigned"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.name"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.gender"),(0,r.kt)("td",{parentName:"tr",align:null},"Gender"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.contact"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.contact.mobile"),(0,r.kt)("td",{parentName:"tr",align:null},"Mobile"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.contact.fax"),(0,r.kt)("td",{parentName:"tr",align:null},"Fax"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.addresses"),(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.addresses.city"),(0,r.kt)("td",{parentName:"tr",align:null},"City"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.addresses.district"),(0,r.kt)("td",{parentName:"tr",align:null},"District"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.addresses.line1"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customer.addresses.line2"),(0,r.kt)("td",{parentName:"tr",align:null},"Text"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"})))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Typically, a factor should be indexed when it is flattened.")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Factors belong to an array cannot be flattened and indexed.")),(0,r.kt)("h3",{id:"encryption"},"Encryption"),(0,r.kt)("p",null,"For security reason, factor can be encrypted. There are several encryption methods built-in,"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"AES256 PKCS5 PADDING: reversible,"),(0,r.kt)("li",{parentName:"ul"},"MD5: one-way,"),(0,r.kt)("li",{parentName:"ul"},"SHA256: one-way,"),(0,r.kt)("li",{parentName:"ul"},"MASK MAIL: mask mail,"),(0,r.kt)("li",{parentName:"ul"},"MASK CENTER 3: mask 3 characters in the middle,"),(0,r.kt)("li",{parentName:"ul"},"MASK CENTER 5: mask 5 characters in the middle,"),(0,r.kt)("li",{parentName:"ul"},"MASK LAST 3: mask 3 characters at the end,"),(0,r.kt)("li",{parentName:"ul"},"MASK LAST 6: mask 6 characters at the end,"),(0,r.kt)("li",{parentName:"ul"},"MASK DAY: mask day in time type,"),(0,r.kt)("li",{parentName:"ul"},"MASK MONTH: mask month in time type,"),(0,r.kt)("li",{parentName:"ul"},"MASK MONTH DAY: mask month and day in time type.")),(0,r.kt)("h3",{id:"default-value"},"Default Value"),(0,r.kt)("p",null,"Default value can be set on factor."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Type of default value will not be validated, keep it compatible with factor type.")),(0,r.kt)("h3",{id:"index--unique-index"},"Index & Unique Index"),(0,r.kt)("p",null,"In raw topic, flattened factor should be indexed for searching purpose. For other types of topics, if factor will be used in pipelines as\ncriteria, and topic is stored in RDS, never forget the index, it improves query performance by avoiding a full table scan."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Watchmen"))," offers 10 index groups per topic, factors sharing the same index group will be created as a composite index. Use unique index\ngroup instead when instance data of factor are unique, ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Watchmen"))," also offers 10 unique index groups per topic. How to group index\ndepends on the query criteria in pipelines, it is similar with RDS index."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"Sequence")," type might be not unique in topic, such as a ",(0,r.kt)("inlineCode",{parentName:"p"},"orderId")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"ORDER_AMOUNT_CHANGES"),", it is a ",(0,r.kt)("inlineCode",{parentName:"p"},"Sequence"),", but not unique.")),(0,r.kt)("h3",{id:"enumeration"},"Enumeration"),(0,r.kt)("p",null,"When a factor is defined as a ",(0,r.kt)("inlineCode",{parentName:"p"},"Enum"),", relationship with ",(0,r.kt)("inlineCode",{parentName:"p"},"Enumeration")," should be defined as well, system know the range of values by this. It\nis important for UI rendering, and also is important for monitoring in ",(0,r.kt)("inlineCode",{parentName:"p"},"DQC"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"See ",(0,r.kt)("a",{parentName:"p",href:"enumeration"},"Enumeration")," and ",(0,r.kt)("a",{parentName:"p",href:"../dqc/dqc-wb-index"},"DQC")," for more information.  ")),(0,r.kt)("h3",{id:"label--description"},"Label & Description"),(0,r.kt)("p",null,"Label is for human reading on UI rendering, description is for more details on system maintaining."),(0,r.kt)("h3",{id:"factor-operations"},"Factor Operations"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Factor Operations",src:a(13660).Z,width:"2278",height:"1722"})),(0,r.kt)("h4",{id:"search"},"Search"),(0,r.kt)("p",null,"A search bar is on above, factors will be filtered according to searching text."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A text: try to match name and label of factor,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"n:name"),": match name only, such as ",(0,r.kt)("inlineCode",{parentName:"li"},"n:order"),","),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"l:label"),": match label only, such as ",(0,r.kt)("inlineCode",{parentName:"li"},"l:seq"),","),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"t:type"),": match type only, such as ",(0,r.kt)("inlineCode",{parentName:"li"},"t:text"),","),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"i:index"),": match index only, such as ",(0,r.kt)("inlineCode",{parentName:"li"},"i:1"),","),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"u:index"),": match unique index only, such as ",(0,r.kt)("inlineCode",{parentName:"li"},"u:1"),","),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"v:value"),": match default value only,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"List factors which have default value when ",(0,r.kt)("inlineCode",{parentName:"li"},"v:true"),","),(0,r.kt)("li",{parentName:"ul"},"List factors which have no default value when it is not ",(0,r.kt)("inlineCode",{parentName:"li"},"v:true"),", for short ",(0,r.kt)("inlineCode",{parentName:"li"},"v:")," also works,"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"e:enum"),": match enumerated factors only,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"List factors which have enumeration when ",(0,r.kt)("inlineCode",{parentName:"li"},"e:true"),","),(0,r.kt)("li",{parentName:"ul"},"List factors which have no enumeration when it is not ",(0,r.kt)("inlineCode",{parentName:"li"},"e:true"),", for short ",(0,r.kt)("inlineCode",{parentName:"li"},"e:")," also works,"),(0,r.kt)("li",{parentName:"ul"},"Only effective on enumeration factors,"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"f:flatten"),": match flattened factors only,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"List factors which are flattened when ",(0,r.kt)("inlineCode",{parentName:"li"},"f:true"),","),(0,r.kt)("li",{parentName:"ul"},"List factors which are not flattened when it is not ",(0,r.kt)("inlineCode",{parentName:"li"},"f:true"),", for short ",(0,r.kt)("inlineCode",{parentName:"li"},"f:")," also works,"),(0,r.kt)("li",{parentName:"ul"},"Only effective on raw topic,"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"c:crypt"),": match encrypted factors only,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"List factors which are encrypted when ",(0,r.kt)("inlineCode",{parentName:"li"},"c:true"),","),(0,r.kt)("li",{parentName:"ul"},"List factors which are not encrypted when it is not ",(0,r.kt)("inlineCode",{parentName:"li"},"c:true"),", for short ",(0,r.kt)("inlineCode",{parentName:"li"},"c:")," also works.")))),(0,r.kt)("h4",{id:"pagination"},"Pagination"),(0,r.kt)("p",null,"Factor list is pagination, there are 50 factors per page, switching by pagination dropdown."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Pagination is under filter.")),(0,r.kt)("h4",{id:"add--delete"},"Add & Delete"),(0,r.kt)("p",null,"Factors are sorted exactly by where they were added, normally it is not a problem, but in sometimes, new factor would be inserted before\nexisting. Use ",(0,r.kt)("inlineCode",{parentName:"p"},"Prepend Factor")," button in factor buttons to insert factor, or use ",(0,r.kt)("inlineCode",{parentName:"p"},"Append Factor")," button in factors buttons to append factor\nat the end."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Page will be switched automatically when the appended factor is in next page.")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"DO NOT prepend/append factor when a filter is applied, new factor might be invisible because it is filtered by search text.")),(0,r.kt)("p",null,"Delete factor by ",(0,r.kt)("inlineCode",{parentName:"p"},"Delete Factor")," in factor buttons."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Deletion cannot be recovered, must be re-added again. Be careful on this.")),(0,r.kt)("h4",{id:"import"},"Import"),(0,r.kt)("p",null,"Factors can be imported by file, there are several ways to import factors,"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"By structure file,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"CSV, or TXT in csv format,"),(0,r.kt)("li",{parentName:"ul"},"JSON,"))),(0,r.kt)("li",{parentName:"ul"},"By instance data file,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"JSON.")))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Factors will be replaced by imported.")),(0,r.kt)("h5",{id:"structure"},"Structure"),(0,r.kt)("p",null,"A structure template zip can be downloaded by ",(0,r.kt)("inlineCode",{parentName:"p"},"Download Structure Template")," button."),(0,r.kt)("p",null,"Files in zip as below,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"zip root/\n\u251c\u2500\u2500 factor-template.csv\n\u2514\u2500\u2500 factor-template.json\n")),(0,r.kt)("p",null,"Modify the template file simply following guide inside, and import by ",(0,r.kt)("inlineCode",{parentName:"p"},"Import By Structure")," button."),(0,r.kt)("h5",{id:"instance-data"},"Instance Data"),(0,r.kt)("p",null,"For easy to import, instance data file is also supported. A json file including data can be imported and factors are detected automatically.\nMake sure data in file is an object array, including the sampling data items. Importer detects factors by following rules:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"First type is better. Using the first detected type, or raise conflict exception,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Text")," is compatible with any types excepts ",(0,r.kt)("inlineCode",{parentName:"li"},"Object"),"/",(0,r.kt)("inlineCode",{parentName:"li"},"Array"),","),(0,r.kt)("li",{parentName:"ul"},"All null values should be detected as ",(0,r.kt)("inlineCode",{parentName:"li"},"Text"),","))),(0,r.kt)("li",{parentName:"ul"},"Datetime type first for text value,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"23 digits for ",(0,r.kt)("inlineCode",{parentName:"li"},"Full Datetime"),","),(0,r.kt)("li",{parentName:"ul"},"19 digits for ",(0,r.kt)("inlineCode",{parentName:"li"},"DateTime"),","),(0,r.kt)("li",{parentName:"ul"},"10 digits for ",(0,r.kt)("inlineCode",{parentName:"li"},"Date"),","),(0,r.kt)("li",{parentName:"ul"},"8 digits for ",(0,r.kt)("inlineCode",{parentName:"li"},"Time"),","))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Object"),"/",(0,r.kt)("inlineCode",{parentName:"li"},"Array")," is only for raw topic, let topic be raw type before importing.")),(0,r.kt)("p",null,"For example,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json5",metastring:"{5,9,21,22,27}","{5,9,21,22,27}":!0},'[\n    {\n        "orderId": 10000,                                   // number detected\n        "orderNo": "N10000",                                // text detected\n        "amount": null,                                     // null value, suspended for now,\n        "enabled": true,                                    // boolean detected\n        "customer": {                                       // object detected\n            "name": "John Doe",\n            "gender": "M",                                  // text detected, not gender\n            "contact": {\n                "mobile": "87654321",\n                "fax": "12345678"\n            },\n            "addresses": [                                  // array detected\n                {\n                    "city": "New York",\n                    "district": "Brooklyn",\n                    "line1": "26 W. Talbot Avenue",\n                    "line2": ""\n                },\n                null,                                       // ignored when not an object in array\n                10000                                       // ignored when not an object in array\n            ]\n        }\n    },\n    {\n        "orderId": "10001",                                 // incorrect, detected as number in first item\n        "orderNo": 10001,                                   // correct, text is compatible with number\n        "amount": null,                                     // all values are null, detected as text     \n        "enabled": null,                                    // null, is compatible with boolean\n    }\n]\n')),(0,r.kt)("h2",{id:"scripts"},"Scripts"),(0,r.kt)("p",null,"Check supported script types by following table,"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Creation"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Alteration"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Oracle SQL Script"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Oracle Liquibase"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MySQL & MariaDB SQL Script"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MySQL & MariaDB Liquibase"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MSSQL SQL Script"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MSSQL Liquibase"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:"center"},"\u2705")))),(0,r.kt)("h3",{id:"how-to-export-scripts"},"How to Export Scripts"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Download Topic Scripts",src:a(27692).Z,width:"2426",height:"1670"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Download Scripts")," button,"),(0,r.kt)("li",{parentName:"ul"},"Pick topics which need to be exported,"),(0,r.kt)("li",{parentName:"ul"},"Pick database types,"),(0,r.kt)("li",{parentName:"ul"},"Pick script purposes,"),(0,r.kt)("li",{parentName:"ul"},"Pick script formats,"),(0,r.kt)("li",{parentName:"ul"},"Click ",(0,r.kt)("inlineCode",{parentName:"li"},"Download")," button.")),(0,r.kt)("p",null,"A zip file is exported. If all checkbox are ticked, folders should be as below,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"zip root/\n\u251c\u2500\u2500 liquibase\n\u2502   \u2514\u2500\u2500 order.xml\n\u251c\u2500\u2500 oracle\n\u2502   \u251c\u2500\u2500 alteration\n\u2502   \u2502   \u2514\u2500\u2500 order.sql\n\u2502   \u2514\u2500\u2500 creation\n\u2502       \u2514\u2500\u2500 order.sql\n\u251c\u2500\u2500 mysql\n\u2502   \u251c\u2500\u2500 alteration\n\u2502   \u2502   \u2514\u2500\u2500 order.sql\n\u2502   \u2514\u2500\u2500 creation\n\u2502       \u2514\u2500\u2500 order.sql\n\u2514\u2500\u2500 mssql\n    \u251c\u2500\u2500 alteration\n    \u2502   \u2514\u2500\u2500 order.sql\n    \u2514\u2500\u2500 creation\n        \u2514\u2500\u2500 order.sql\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Liquibase scripts are combined in one file,"),(0,r.kt)("li",{parentName:"ul"},"SQL scripts are separated in different folders.")),(0,r.kt)("h3",{id:"how-script-works"},"How Script Works"),(0,r.kt)("h4",{id:"for-creation"},"For Creation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Table creation will be ignored on liquibase script, but this will not be checked on SQL script,"),(0,r.kt)("li",{parentName:"ul"},"SQL for drop table is commented in script file, uncomment it if you need,",(0,r.kt)("br",{parentName:"li"}),"Note drop table will drop all instance data also,"),(0,r.kt)("li",{parentName:"ul"},"Mandatory columns will be created automatically,"),(0,r.kt)("li",{parentName:"ul"},"PK column: ",(0,r.kt)("inlineCode",{parentName:"li"},"id_"),","),(0,r.kt)("li",{parentName:"ul"},"Aggregation column: ",(0,r.kt)("inlineCode",{parentName:"li"},"aggregate_assist_"),","),(0,r.kt)("li",{parentName:"ul"},"Version column: ",(0,r.kt)("inlineCode",{parentName:"li"},"version_"),","),(0,r.kt)("li",{parentName:"ul"},"Data zone column: ",(0,r.kt)("inlineCode",{parentName:"li"},"tenant_id_"),","),(0,r.kt)("li",{parentName:"ul"},"Time audit columns: ",(0,r.kt)("inlineCode",{parentName:"li"},"insert_time_")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"update_time_"),","),(0,r.kt)("li",{parentName:"ul"},"Raw data column: ",(0,r.kt)("inlineCode",{parentName:"li"},"data_"),", available for raw topic only,"),(0,r.kt)("li",{parentName:"ul"},"Primary key will be created automatically on PK column,"),(0,r.kt)("li",{parentName:"ul"},"Indexes will be created automatically,"),(0,r.kt)("li",{parentName:"ul"},"On data zone column,"),(0,r.kt)("li",{parentName:"ul"},"On time audit columns,"),(0,r.kt)("li",{parentName:"ul"},"On indexed factors,"),(0,r.kt)("li",{parentName:"ul"},"Unique indexes on factors which appointed,"),(0,r.kt)("li",{parentName:"ul"},"this part is shared between liquibase creation and alteration.")),(0,r.kt)("h4",{id:"for-alteration"},"For Alteration"),(0,r.kt)("p",null,"Alteration is very similar with creation, except columns will be"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added when not existed,"),(0,r.kt)("li",{parentName:"ul"},"Modified when existed.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Read comments in script files for more details about how to choose, modify and execute them.  ")),(0,r.kt)("admonition",{title:"Be very careful on execution of scripts.  ",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Scripts exported are base version generated by frontend, we have no idea with what exactly is the structure of target data source.",(0,r.kt)("br",{parentName:"p"}),"\n","Therefore, we highly recommend review all script files, modify them to what you need, store and maintain versions by some version control\ntool, such as GIT.")),(0,r.kt)("h2",{id:"form-validation"},"Form Validation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Topic Name: required,"),(0,r.kt)("li",{parentName:"ul"},"Must follow the standard of data source type. For example, in oracle, topic equates a ",(0,r.kt)("inlineCode",{parentName:"li"},"Table"),","),(0,r.kt)("li",{parentName:"ul"},"Snake case or camel case is allowed,"),(0,r.kt)("li",{parentName:"ul"},"Topic Kind: required,"),(0,r.kt)("li",{parentName:"ul"},"Topic Type: required,"),(0,r.kt)("li",{parentName:"ul"},"Data Source: required,"),(0,r.kt)("li",{parentName:"ul"},"Description: optional,"),(0,r.kt)("li",{parentName:"ul"},"Factors: at least one factor is required,"),(0,r.kt)("li",{parentName:"ul"},"Name: required,"),(0,r.kt)("li",{parentName:"ul"},"Label: optional. Highly recommend filling it with a human reading text,"),(0,r.kt)("li",{parentName:"ul"},"Type: required,"),(0,r.kt)("li",{parentName:"ul"},"Default Value: optional,"),(0,r.kt)("li",{parentName:"ul"},"Index Group: optional,"),(0,r.kt)("li",{parentName:"ul"},"Encryption: optional,"),(0,r.kt)("li",{parentName:"ul"},"Enumeration: required when a factor is an enumeration,"),(0,r.kt)("li",{parentName:"ul"},"Flatten Column: required when topic is raw and factor name contains at least one dot(",(0,r.kt)("inlineCode",{parentName:"li"},"."),").")),(0,r.kt)("h2",{id:"topic-layers"},"Topic Layers"),(0,r.kt)("p",null,"There are a large amount of topics should be defined, we recommend that topics would be defined on different layers. Each layer has its own\npurpose, and using pipelines lead data through these layers, cleaning, transforming and aggregating them."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Topic Layers",src:a(23605).Z,width:"1778",height:"1020"})))}u.isMDXComponent=!0},13660:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/factor-operators-cfcd829fb4b5e2bf143285e5e665b838.png"},45163:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/flatten-factor-0cc50cacdd1711e8d88c59de2d3fc654.png"},23605:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/topic-layers-97cd9ab3ae6d8cc38f56752cac1b17fb.png"},27692:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/topic-script-3c1dbc912b0eca8a11293f2d09d7a341.png"},37703:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/topic-17c2e0c27b9f0b2e2c87b0e8f6a62cab.png"}}]);